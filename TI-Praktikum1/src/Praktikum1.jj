/**
 * JavaCC template file created by SF JavaCC plugin 1.5.17+ wizard for JavaCC 1.5.0+
 */options{  JDK_VERSION = "1.5";  static = true;}PARSER_BEGIN(EG1)
public class EG1{  public static void main(String args []) throws ParseException  {    EG1 parser = new EG1(System.in);    while (true)    {      System.out.println("Reading from standard input...");      System.out.print("Enter an while0-Program:");      try      {        switch (EG1.program())        {          case 0 :           System.out.println("OK.");          break;          case 1 :           System.out.println("Goodbye.");          break;          default :           break;        }      }      catch (Exception e)      {        System.out.println("NOK.");        System.out.println(e.getMessage());        EG1.ReInit(System.in);      }      catch (Error e)      {        System.out.println("Oops.");        System.out.println(e.getMessage());        break;      }    }  }}PARSER_END(EG1)SKIP :{  " "| "\r"| "\t"| "\n"}TOKEN : /* OPERATORS */
{
	// Keywords
	  < BEGIN : "begin" >
	| < END : "end" >
	| < DO : "do" >
	| < WHILE : "while">
	
	// Operators
	| < ADD : "+"> 
	
	// Diverse
	| < ASSIGN : "=" >
 
 
	// Conditions
	| < NOASSIGN : "!=" >
	
	
	// Other terminal symbols
	| < IDENT : "V"(["1"-"9"](["0"-"9"])*) >
	| < NULL : "0" >
	| < ONE : "1" >
	| < SEMI : ";" > 
}

int program() :{}{  sequence()  {    return 0;  }| ";"  {    return 1;  }}void sequence() :{}{  statement()  (    statement()  )*}void statement() :{}{	  While()
| AssignmentorIncrement()}

void AssignmentorIncrement() :
{}{  < IDENT > <ASSIGN > (Assignment() | Increment()) <SEMI >
}
void Assignment() :{}{  <NULL >}void Increment() :{}{  <IDENT > <ADD > <ONE > >}

void While() :
{}
{
  < WHILE > <IDENT > <NOASSIGN > <IDENT > <DO > <BEGIN > sequence() < END >
}

